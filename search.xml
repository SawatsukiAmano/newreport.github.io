<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo-next7食用方法</title>
    <url>/2020-12-21/use-hexo-next7/</url>
    <content><![CDATA[<h1 id="博客启用（前略环境搭建）"><a href="#博客启用（前略环境搭建）" class="headerlink" title="博客启用（前略环境搭建）"></a>博客启用（前略环境搭建）</h1><p>新建文件夹，之后在其中执行：hexo init。<br>hexo-next7官方git：<a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a><br>hexo-next8官方git：<a href="https://github.com/next-theme/hexo-theme-next">https://github.com/next-theme/hexo-theme-next</a><br>git配置：npm install –save hexo-deployer-git；多用户指定其一：githubgit config –global user.email “邮箱”和git config –global user.name “用户名”</p>
<span id="more"></span>


<h1 id="可能会用到的工具"><a href="#可能会用到的工具" class="headerlink" title="可能会用到的工具"></a>可能会用到的工具</h1><p>RSS订阅：npm install hexo-generator-feed；<br>参考：<a href="https://blog.csdn.net/qq_36537546/article/details/90730068">https://blog.csdn.net/qq_36537546/article/details/90730068</a>  </p>
<p>站点地图：npm install hexo-generator-sitemap –save；<br>参考：<a href="https://www.cnblogs.com/brady-wang/p/8493181.html">https://www.cnblogs.com/brady-wang/p/8493181.html</a>  </p>
<p>next7的搜索功能：npm install hexo-generator-searchdb –save；<br>参考：<a href="https://blog.csdn.net/qq_41086511/article/details/103537522">https://blog.csdn.net/qq_41086511/article/details/103537522</a>  </p>
<p>背景图片及透明度调整：\themes\next-7.7.2\source\css_common\components\pages\pages.styl，能找到此页面样式文件的均可。<br>参考：<a href="https://blog.csdn.net/Louis_li51/article/details/105227430%EF%BC%9B">https://blog.csdn.net/Louis_li51/article/details/105227430；</a><br>注：带搜索框后不能开启菜单栏和搜索栏的透明度，否则会透明度过高看不清，但可以给头像的框加透明度。   </p>
<p>next7单独友链参考：<a href="https://blog.csdn.net/Aoman_Hao/article/details/103758829">https://blog.csdn.net/Aoman_Hao/article/details/103758829</a>  </p>
<p>文章置顶：node_modules&#x2F;hexo-generator-index&#x2F;lib&#x2F;generator；<br>参考：<a href="https://www.jianshu.com/p/42a4efcdf8d7">https://www.jianshu.com/p/42a4efcdf8d7</a>  </p>
<p>图片压缩工具：<a href="https://tinypng.com/">https://tinypng.com/</a> 或者<a href="https://docsmall.com/image-compress">https://docsmall.com/image-compress</a>  </p>
<p>图片批量重命名工具（可为图片hash值）：<a href="https://renamer.en.softonic.com/">ReNamer</a>  </p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>图床&quot;永久链&quot;</title>
    <url>/2021-01-06/img-make/</url>
    <content><![CDATA[<p>需要准备对象存储及域名，理论”永久链”图床，可在各云服务商或个人服务器间迁移数据<br>如果你是国外的域名，markdown是国内使用，需要绑定国内第三方dns，这里以<a href="https://www.namesilo.com/">namesilo</a>域名绑定<a href="https://www.dnspod.cn/">dnspod</a>为例。</p>
<span id="more"></span>  

<h1 id="namesilo配置-国内备案域名可跳过此步骤"><a href="#namesilo配置-国内备案域名可跳过此步骤" class="headerlink" title="namesilo配置(国内备案域名可跳过此步骤)"></a>namesilo配置(国内备案域名可跳过此步骤)</h1><p><img src="//42.193.14.174:31001/images/haruki/blog/cn/281BCA8978E663D1AA05423137C07932E35E89FDDDCA7A23445455A7723F219C.png"></p>
<p>进入域名管理页面<br>将原有三个dns删除替换为以下内容，提交</p>
<blockquote>
<p>f1g1ns1.dnspod.net<br>  f1g1ns2.dnspod.net</p>
</blockquote>
<p>返回域名管理页面，点击域名所在行右侧蓝色地球，进入域名解析页面，删除所有的解析内容即可。</p>
<h1 id="dnspod配置"><a href="#dnspod配置" class="headerlink" title="dnspod配置"></a>dnspod配置</h1><p>进入dnspod管理页面，添加你的域名，点击dns刷新<br>创建公有读私有写存储桶，并复制存储桶域名<br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/5C3AE90E330110085424836989AC2F904D961280A441B32B909654094DCFE2B2.png" alt="添加自定义源站域名"><br>到dnspod解析页面，添加CNAME解析<br>需要注意的是，namesilo的dns可能需要等几十分钟才会刷新，在此之前访问域名可能是到达不了存储桶的<br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/E315A71C14F3F94218BC781296F5F37A1B1996BCEF1D797ECA20A64597AFD18F.png"></p>
<h1 id="ssl证书以及防盗链设置"><a href="#ssl证书以及防盗链设置" class="headerlink" title="ssl证书以及防盗链设置"></a>ssl证书以及防盗链设置</h1><p>在dnspod或者腾讯云域名注册界面申请免费ssl证书并下载，解压。在存储桶域名绑定页面进行证书绑定，用记事本打开Nginx里的文本并复制到对应区域<br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/6B12C37D45ECE58C98F26DA67CDFC60F73ADB472ECBD37D20EFC839F64BD4A39.png"></p>
<p>测试一下，不挂t的情况下自定义域名可以访问图片，以后的迁移只需copy文件，域名重新对应一下CNAME即可，markdown文章的图片地址不需要变动。<br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/4DEED59F8DC599B65736DFA4B81C4DB1C4028557408CFBA90B1691DDDE70D6EB.png"></p>
<p>存储桶防盗链设置如下，配置完防盗链之后本地预览和网页地址栏输入是访问不了对象存储的，只有白名单内的ip才能访问<br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/358EF065F5956500257330DDE1493957881F0BD1C0294CB5E6115CDF7805CE40.png"></p>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>对象存储</tag>
      </tags>
  </entry>
  <entry>
    <title>域名的使用</title>
    <url>/2021-01-05/make-domainname/</url>
    <content><![CDATA[<h1 id="域名服务商"><a href="#域名服务商" class="headerlink" title="域名服务商"></a>域名服务商</h1><p>个人站除开com、net这两个域名，其他推荐选择国外服务商进行注册。以下仅列举一些我接触过的，还有很多其他的服务商就不一一列举了  </p>
<ul>
<li>国内<ul>
<li><a href="https://wanwang.aliyun.com/">阿里云万网</a>：尚可，只提供com和net、tv、cc这四个域名的隐藏个人信息服务</li>
<li><a href="https://www.huaweicloud.com/product/domain.html">华为云domain</a>：在企鹅和阿里中间的位置</li>
<li><a href="https://dnspod.cloud.tencent.com/">腾讯云dnspod</a>：我目前所有com域名都在这个上面</li>
<li><a href="https://cloud.baidu.com/product/bcd.html">百度云BCD</a>：新用户优惠不好，域名隐私里写的和实际不符</li>
</ul>
</li>
<li>国外<ul>
<li><a href="https://sg.godaddy.com/">GoDaddy</a>：全球最大的域名服务商，当然价格就…也是贵的，隐藏个人信息还要收费</li>
<li><a href="https://www.namesilo.com/">namesilo</a>：价格便宜，比国内的稍微贵一丢丢，所有域名均支持免费whois隐藏个人信息</li>
</ul>
</li>
</ul>
<span id="more"></span>

<h1 id="选购指南"><a href="#选购指南" class="headerlink" title="选购指南"></a>选购指南</h1><p>对于正常内容的网站，.com和.net选国内的就可以了，价格比国外便宜，安全性几个顶级服务商一般不会出问题，而且这两个后缀的域名默认隐藏whois个人信息。<br>其他的域名，比如work、link、site、me…请参考各个国内服务商的域名隐私保护指南(<a href="https://wanwang.aliyun.com/domain/whoisprotect/">阿里云</a>、<a href="https://support.huaweicloud.com/domain_faq/domain_faq_0002.html">华为云</a>、<a href="https://cloud.tencent.com/document/product/242/30404">腾讯云</a>、<a href="https://cloud.baidu.com/doc/BCD/s/bjwvym8qn">百度云</a>)，他们是不支持非主流域名隐藏注册人姓名和注册邮箱的，根据我的实践，腾讯和阿里的top域名，百度和腾讯的xyz域名，均不支持whois隐藏，虽然ICANN和欧盟在2018年已经要求whois查询结果不再展示域名所有者、联系邮箱等信息，但有些域名服务商对于非主流域名并没有默认隐藏。<br>这些非主流的域名，我一般作为跳转域名用，当然也可以给小网站，出于whois查询隐私考虑，这些域名最好选择国外的，好处有很多就不多说了，至少whois查询不到注册人。<br>然后是国外服务商的选择，我选择的是namesilo，因为便宜且支持隐藏个人信息，无需备案就可跳转。<br>使用方法参考：<a href="https://zhuanlan.zhihu.com/p/33921436">https://zhuanlan.zhihu.com/p/33921436</a> 。<br>跳转指定url参考：<a href="https://www.namesilo.com/Support/Domain-Forwarding">https://www.namesilo.com/Support/Domain-Forwarding</a> 。<br>Google邮箱注册在移动端gmail注册即可不绑定手机，最开始的手机号只为验证是否真人。</p>
<p>价格对比1：<a href="https://www.domain265.com/">https://www.domain265.com/</a><br>价格对比2: <a href="https://namebeta.com/">https://namebeta.com/</a><br>whois查询：<a href="https://domain.163yun.com/">https://domain.163yun.com/</a><br>ICANN更多信息：<a href="https://www.icann.org/news/announcement-2018-05-22-zh">https://www.icann.org/news/announcement-2018-05-22-zh</a></p>
<h1 id="域名跳转指定url方案"><a href="#域名跳转指定url方案" class="headerlink" title="域名跳转指定url方案"></a>域名跳转指定url方案</h1><blockquote>
<p>2022-08-08 更新，现在可以使用<a href="https://newreport.top/2022-08-08/using-cloudflare/">cloudflare</a>的workers进行301跳转</p>
</blockquote>
<h2 id="方案一：github仓库跳转"><a href="#方案一：github仓库跳转" class="headerlink" title="方案一：github仓库跳转"></a>方案一：github仓库跳转</h2><p>准备：一个github账号，一个域名<br>思路：域名商那里CNAME解析到你的github域名 yourname.github.io ，github仓库内CNAME写入域名并开启github page，写入一个js加载时跳转事件即可  </p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;域名网址&quot;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="方案二：对象存储跳转"><a href="#方案二：对象存储跳转" class="headerlink" title="方案二：对象存储跳转"></a>方案二：对象存储跳转</h2><blockquote>
<p>2022-08-08 现在国内对象存储需要备案才能访问域名，该方案只适用于非大陆存储桶</p>
</blockquote>
<p>准备：能开启静态网页的对象存储，一个域名<br>思路：一级域名CNAME解析到对象存储的website域名上，存储桶只存放一个index.html，之后写入JavaScript跳转即可<br>具体步骤：  </p>
<ol>
<li>创建一个非大陆地区的公有读私有写存储桶，推荐中国香港节点。</li>
<li>开启存储桶的静态网站模块，并打开安全模块中的服务器端加密。</li>
<li>在对象存储域名管理里填写自定义源站域名，在dnspod中添加对应CNAME解析，并上传对应证书密钥到源站上。</li>
<li>对象存储上传一个index.html文件，写入以下代码<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&quot;域名网址&quot;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
  </entry>
  <entry>
    <title>无限容量相册</title>
    <url>/2021-06-28/cloud-fullall/</url>
    <content><![CDATA[<p>基于：pixel&#x2F;pixel xl（即pixel一代），1微力同步，服务器一台（非必须，中继使用）</p>
]]></content>
      <categories>
        <category>杂物箱</category>
      </categories>
      <tags>
        <tag>对象存储</tag>
        <tag>待补充</tag>
      </tags>
  </entry>
  <entry>
    <title>cloudflare的使用</title>
    <url>/2022-08-08/using-cloudflare/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>杂物箱</category>
      </categories>
      <tags>
        <tag>Domain</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>云函数</title>
    <url>/2021-01-05/function-cloud/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><a href="https://developers.weixin.qq.com/miniprogram/dev/wxcloud/guide/functions.html">云函数简介</a><br>长不看结论：总之就是跑脚本，也可以跑微信的推送等事件。目前我只用它在跑签到脚本。</p>
<h1 id="server酱"><a href="#server酱" class="headerlink" title="server酱"></a>server酱</h1><p>原版server酱：<a href="http://sc.ftqq.com/">http://sc.ftqq.com/</a><br>自搭server酱：<a href="https://www.v2ex.com/t/567927">https://www.v2ex.com/t/567927</a></p>
<span id="more"></span>

<h1 id="哔哩哔哩签到"><a href="#哔哩哔哩签到" class="headerlink" title="哔哩哔哩签到"></a>哔哩哔哩签到</h1><p>项目地址：<a href="https://github.com/happy888888/BiliExp">https://github.com/happy888888/BiliExp</a><br>油猴脚本：<a href="https://greasyfork.org/zh-CN/scripts/393096-bilibiliexp/versions">https://greasyfork.org/zh-CN/scripts/393096-bilibiliexp/versions</a><br>注意事项：云函数方式为cookie签到</p>
<h1 id="天翼云盘签到和抽奖"><a href="#天翼云盘签到和抽奖" class="headerlink" title="天翼云盘签到和抽奖"></a>天翼云盘签到和抽奖</h1><p>项目地址：<a href="https://github.com/FingerSword/Cloud189-Sign-In">https://github.com/FingerSword/Cloud189-Sign-In</a><br>注意事项：不改密码就ok  </p>
<h1 id="网易云音乐签到"><a href="#网易云音乐签到" class="headerlink" title="网易云音乐签到"></a>网易云音乐签到</h1><p>地址：<a href="https://www.coolapk.com/feed/22733317">https://www.coolapk.com/feed/22733317</a><br>注意事项：不改密码就ok  </p>
<h1 id="有道云笔记签到"><a href="#有道云笔记签到" class="headerlink" title="有道云笔记签到"></a>有道云笔记签到</h1><p>签到1.0：<a href="https://www.coolapk.com/feed/18049127">https://www.coolapk.com/feed/18049127</a><br>签到2.0：<a href="https://www.coolapk.com/feed/19750209">https://www.coolapk.com/feed/19750209</a><br>注意事项：均为cookie，我用qq登录的账号一天就掉了，用手机号登录的应该能管一个月</p>
]]></content>
      <categories>
        <category>杂物箱</category>
      </categories>
      <tags>
        <tag>云服务</tag>
      </tags>
  </entry>
  <entry>
    <title>网盘搭建</title>
    <url>/2021-01-07/cloud-make/</url>
    <content><![CDATA[<h1 id="NAS"><a href="#NAS" class="headerlink" title="NAS"></a>NAS</h1><p>demo：null<br>优势：没有审查，自用隐私安全性最高</p>
<h2 id="群晖"><a href="#群晖" class="headerlink" title="群晖"></a>群晖</h2><h1 id="公共网盘-api-可视化"><a href="#公共网盘-api-可视化" class="headerlink" title="公共网盘-api-可视化"></a>公共网盘-api-可视化</h1><p>demo：null<br>优势：免费<br>缺点：审查机制由云存储服务商判断、隐私性最低、会河蟹某些内容</p>
<h2 id="Onedrive-Oneindex"><a href="#Onedrive-Oneindex" class="headerlink" title="Onedrive-Oneindex"></a>Onedrive-Oneindex</h2><h2 id="和彩云-x2F-天翼云"><a href="#和彩云-x2F-天翼云" class="headerlink" title="和彩云&#x2F;天翼云"></a>和彩云&#x2F;天翼云</h2><h1 id="服务器-对象存储"><a href="#服务器-对象存储" class="headerlink" title="服务器-对象存储"></a>服务器-对象存储</h1><p>demo：null<br>优势：没有审查,可靠性最高<br>缺点：付费服务</p>
<h2 id="seafile"><a href="#seafile" class="headerlink" title="seafile"></a>seafile</h2><h2 id="nextcloud"><a href="#nextcloud" class="headerlink" title="nextcloud"></a>nextcloud</h2><h2 id="owncloud"><a href="#owncloud" class="headerlink" title="owncloud"></a>owncloud</h2>]]></content>
      <categories>
        <category>杂物箱</category>
      </categories>
      <tags>
        <tag>对象存储</tag>
        <tag>待补充</tag>
      </tags>
  </entry>
  <entry>
    <title>C#基础</title>
    <url>/2021-01-05/Csharp-base/</url>
    <content><![CDATA[<h1 id="C-语言及特点"><a href="#C-语言及特点" class="headerlink" title="C#语言及特点"></a>C#语言及特点</h1><ul>
<li>C#是微软公司发布的一种<strong>面向对象</strong>的、运行于.NET Framework 和 .NET Core (完全开源，跨平台)之上的高级程序设计语言。</li>
<li>C#是一种<strong>安全的、稳定的、简单的、优雅的</strong>，由C和C++衍生出来的面向对象的编程语言。它在继承C和C++的强大功能的同时去掉了一些它们的复杂特性。</li>
<li>C#是<strong>面向对象</strong>的编程语言<span id="more"></span></li>
</ul>
<h1 id="认识-NET-Framework-x2F-NET-Core"><a href="#认识-NET-Framework-x2F-NET-Core" class="headerlink" title="认识 .NET Framework &#x2F; .NET Core"></a>认识 .NET Framework &#x2F; .NET Core</h1><pre class="mermaid">graph LR
A[.NET平台] -->B(C#语言)
A[.NET平台] -->C(Visual Basic语言)
A[.NET平台] -->D(C++语言)
A[.NET平台] -->E(F#语言)
A[.NET平台] -->F(...语言)</pre>
<h1 id="Visual-Studio-安装使用"><a href="#Visual-Studio-安装使用" class="headerlink" title="Visual Studio 安装使用"></a>Visual Studio 安装使用</h1><p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p>
<h1 id="创建第一个程序"><a href="#创建第一个程序" class="headerlink" title="创建第一个程序"></a>创建第一个程序</h1><p>Windows 窗体应用（.net framwork）</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApp1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Label1_Click</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C#</category>
      </categories>
  </entry>
  <entry>
    <title>附页</title>
    <url>/2021-06-23/English-1/</url>
    <content><![CDATA[<h1 id="元音辅音"><a href="#元音辅音" class="headerlink" title="元音辅音"></a>元音辅音</h1><ul>
<li>元音：a、e、i、o、u</li>
<li>辅音：b、c、d、f、g、h、j、k、l、m、n、p、q、r、s、t、v、w、x、y、z（除开元音的）</li>
</ul>
]]></content>
      <categories>
        <category>English</category>
      </categories>
  </entry>
  <entry>
    <title>英语词性</title>
    <url>/2021-06-23/English-part-of-speech/</url>
    <content><![CDATA[<p>定义：词性又称为词类，英语单词根据其在句中的作用，分为<strong>十大类</strong></p>
<span id="more"></span>  

<h1 id="名词-n"><a href="#名词-n" class="headerlink" title="名词(n.)"></a>名词(n.)</h1><ul>
<li>作用：表示事务的名称</li>
<li>分类：<ul>
<li>专有名词：指<strong>特定或独一无二的人或物</strong>，表示人、地方、事物、组织等的专有名词，，第一个首字母大写。例：Mary、Jane、China</li>
<li>普通名词：指某类人、事物或抽象概念的名称<ul>
<li>可数名词<ul>
<li>个体名词：用来指单人或事物的名词。例：book、key</li>
<li>集体名词：用来指一群人或一些事物总称的名词。例：people、army</li>
</ul>
</li>
<li>不可数名词<ul>
<li>物质名词：用来表示物质的名称，包括材料、液体、气体等具体实物的名词。例：water、glass</li>
<li>抽象名词：用来指人或事物的品质、情感、状态、动作等抽象概念的名词。例：love、anger</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>名词由单数变复数的基本方法</li>
</ul>
<ol>
<li>在单数名词词尾 +s。例：bag-bags、car-cars</li>
<li>s,x,sh,ch结尾和以辅音字母+o结尾的名词 +es。例：watch-watches、potati-potatoes、tomato-tomatoes、echo-echoes、hero-heroes</li>
<li>以元音字母 +o 结尾，部分以辅音字母 +o 结尾的外来名词或缩写名词 +s。例：photo-photos、piano-pianos、bamboo-bamboos、zoo-zoos</li>
<li>以辅音字母 +y 结尾，变 y 为 i 再 +es。例：baby-babies、city-cities</li>
<li>以元音字母 +y 结尾， +s。例：boy-boys、toy-toys</li>
<li>以 f、fe 结尾，变 f、fe 为 v 再 +es。例：leaf-leaves、shelf-shelves、wife-wives</li>
<li>不规则变化。例：man-men、woman-women、child-children、sheep-sheep</li>
</ol>
<h1 id="代词-pron"><a href="#代词-pron" class="headerlink" title="代词(pron.)"></a>代词(pron.)</h1><ul>
<li>作用：为了避免重复用来代替名词或名词词组的词</li>
<li>补充：<ul>
<li></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>English</category>
      </categories>
  </entry>
  <entry>
    <title>Kubernetes1.24公网部署</title>
    <url>/2022-08-03/kubernetes_1_24_public_install/</url>
    <content><![CDATA[<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><blockquote>
<p>master：成都区 2核4G<br>cd001：成都区 2核4G<br>hk001: 香港区 2核4G<br>sg001: 新加坡 2核4G<br>主机：四台腾讯云服务器，系统为CentOS Stream9<br>Kubernetes版本：V1.24.3（截至2022-08-03，当前k8s最新版本为 1.24.3）</p>
</blockquote>
<span id="more"></span>  


<h4 id="由于集群在公网搭建，所以需要添加一张虚拟网卡-公网ip，仅master节点，如果集群为内网搭建，可省略该步骤）"><a href="#由于集群在公网搭建，所以需要添加一张虚拟网卡-公网ip，仅master节点，如果集群为内网搭建，可省略该步骤）" class="headerlink" title="由于集群在公网搭建，所以需要添加一张虚拟网卡(公网ip，仅master节点，如果集群为内网搭建，可省略该步骤）"></a>由于集群在公网搭建，所以需要添加一张虚拟网卡(公网ip，仅master节点，如果集群为内网搭建，可省略该步骤）</h4><p>tee &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0:1 &lt;&lt;-‘EOF’<br>DEVICE&#x3D;eth0:1<br>ONBOOT&#x3D;yes<br>BOOTPROTO&#x3D;static<br>IPADDR&#x3D;公网IP<br>NETMASK&#x3D;255.255.255.0<br>EOF</p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>CloudComputing</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetest1.24内网二进制搭建</title>
    <url>/2022-08-06/kubernetes_1_24_inside_binary_install/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>CloudComputing</tag>
        <tag>etcd</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes1.24内网部署</title>
    <url>/2022-07-27/kubernetes_1_24_inside_install/</url>
    <content><![CDATA[<h1 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h1><blockquote>
<p>master：成都区 2核4G    10.0.0.17<br>cd001：成都区 2核4G     10.0.0.11<br>主机：两台腾讯云轻量云，系统为CentOS Stream8，轻量云不支持EIP故不能公网搭K8s<br>Kubernetes版本：V1.24.3（截至2022-08-02，当前k8s最新版本为 1.24.3）</p>
</blockquote>
<span id="more"></span>  
<h1 id="Master节点安装"><a href="#Master节点安装" class="headerlink" title="Master节点安装"></a>Master节点安装</h1><h2 id="主机配置"><a href="#主机配置" class="headerlink" title="主机配置"></a>主机配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 设置主机名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;master&quot;</span> &gt; /etc/hostname</span><br><span class="line">yum -y tc</span><br><span class="line">yum -y update </span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启使master主机名生效</span></span><br><span class="line">reboot </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt;&gt; /proc/sys/net/ipv4/ip_forward <span class="comment"># 开启ip转发</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置hosts 注意，每次重启后该文件会恢复，需要重新添加</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">10.0.0.17 master</span></span><br><span class="line"><span class="string">10.0.0.11 cd001</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl restart NetworkManager.service</span><br></pre></td></tr></table></figure>

<h2 id="配置containerd"><a href="#配置containerd" class="headerlink" title="配置containerd"></a>配置containerd</h2><blockquote>
<p>将containerd作为k8s的容器引擎</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 阿里镜像源</span></span><br><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line">yum install -y containerd.io --allowerasing</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span>  -p /etc/containerd </span><br><span class="line"><span class="built_in">rm</span> -rf /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s#sandbox_image = &quot;k8s.gcr.io/pause:#sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"><span class="comment"># sed -i &#x27;s/systemd_cgroup = false/systemd_cgroup = true/g&#x27; /etc/containerd/config.toml</span></span><br><span class="line">systemctl restart containerd</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> containerd</span><br><span class="line">systemctl start containerd</span><br></pre></td></tr></table></figure>
<h2 id="runc命令行配置"><a href="#runc命令行配置" class="headerlink" title="runc命令行配置"></a>runc命令行配置</h2><blockquote>
<p>检测runc、ctrcli、配置k8s源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctr version</span><br><span class="line">runc -version </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">yum clean all </span><br><span class="line">yum makecache</span><br><span class="line"><span class="comment"># k8s init时需要此应用进行网络测试</span></span><br><span class="line">yum install -y tc   </span><br></pre></td></tr></table></figure>
<h2 id="k8s组件安装"><a href="#k8s组件安装" class="headerlink" title="k8s组件安装"></a>k8s组件安装</h2><blockquote>
<p>安装配置k8s三件套并配置</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y kubectl kubelet kubeadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 兼容性处理 systemd</span></span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&#x27;KUBELET_EXTRA_ARGS=&quot;--cgroup-driver=systemd&quot;&#x27;</span> &gt; /etc/sysconfig/kubelet</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl start kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置cricl 的endpoint</span></span><br><span class="line">crictl config runtime-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line">crictl config image-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置k8s镜像版本（不配置默认拉去latest 最新版）</span></span><br><span class="line"><span class="comment"># kubeadm config images list --kubernetes-version=v1.24.3</span></span><br></pre></td></tr></table></figure>

<h2 id="kubernetes初始化"><a href="#kubernetes初始化" class="headerlink" title="kubernetes初始化"></a>kubernetes初始化</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 错误处理</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"><span class="comment"># rm -fr  ~/.kube/config</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --apiserver-advertise-address和--control-plane-endpoint 分别为apiServer和控制面板的ip地址，内网部署使用master节点内网ip，公网部署使用master节点公网ip</span></span><br><span class="line">kubeadm init --pod-network-cidr=10.224.0.0/16 --apiserver-advertise-address=10.0.0.17 --control-plane-endpoint=10.0.0.17 --image-repository registry.aliyuncs.com/google_containers --v=5</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># kubeadm join 10.0.0.17:6443 --token 9t45vv.40lt4exfxmirt7q2 --discovery-token-ca-cert-hash sha256:65cfa9a08c89e81357f3e394757ebb6c6c8000020c2e7411248cac2c4ef79c2e</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看到master是NotReady状态</span></span><br><span class="line">kubectl get node -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可以看到coredns是pending状态</span></span><br><span class="line">kubectl get pod -A -o wide</span><br><span class="line"></span><br><span class="line"><span class="comment"># 之后安装calico或者flannel网络插件后会恢复正常</span></span><br><span class="line"></span><br><span class="line">crictl images</span><br><span class="line"></span><br><span class="line">crictl ps -a</span><br></pre></td></tr></table></figure>
<h1 id="Node节点安装"><a href="#Node节点安装" class="headerlink" title="Node节点安装"></a>Node节点安装</h1><h2 id="主机配置-1"><a href="#主机配置-1" class="headerlink" title="主机配置"></a>主机配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># 设置主机名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cd001&quot;</span> &gt; /etc/hostname</span><br><span class="line"></span><br><span class="line">yum install -y tc</span><br><span class="line"></span><br><span class="line">yum -y update </span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启使master主机名生效</span></span><br><span class="line">reboot </span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt;&gt; /proc/sys/net/ipv4/ip_forward <span class="comment"># 开启ip转发</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置hosts 注意，每次重启后该文件会恢复，需要重新添加</span></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">10.0.0.17 master</span></span><br><span class="line"><span class="string">10.0.0.11 cd001</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl restart NetworkManager.service</span><br></pre></td></tr></table></figure>

<h2 id="配置containerd-1"><a href="#配置containerd-1" class="headerlink" title="配置containerd"></a>配置containerd</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 阿里镜像源</span></span><br><span class="line">wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; /etc/modules-load.d/containerd.conf</span></span><br><span class="line"><span class="string">overlay</span></span><br><span class="line"><span class="string">br_netfilter</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">modprobe overlay</span><br><span class="line">modprobe br_netfilter</span><br><span class="line"></span><br><span class="line">yum install -y containerd.io --allowerasing</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span>  -p /etc/containerd </span><br><span class="line"><span class="built_in">rm</span> -rf /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line">containerd config default &gt; /etc/containerd/config.toml</span><br><span class="line"></span><br><span class="line"> sed -i <span class="string">&#x27;s#sandbox_image = &quot;k8s.gcr.io/pause:#sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:#g&#x27;</span> /etc/containerd/config.toml</span><br><span class="line"><span class="comment"># sed -i &#x27;s/systemd_cgroup = false/systemd_cgroup = true/g&#x27; /etc/containerd/config.toml</span></span><br><span class="line">systemctl restart containerd</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> containerd</span><br><span class="line">systemctl start containerd</span><br></pre></td></tr></table></figure>
<h2 id="runc命令行配置-1"><a href="#runc命令行配置-1" class="headerlink" title="runc命令行配置"></a>runc命令行配置</h2><blockquote>
<p>检测runc 和ctrcli、配置k8s源</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ctr version</span><br><span class="line">runc -version </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF &gt; /etc/yum.repos.d/kubernetes.repo</span></span><br><span class="line"><span class="string">[kubernetes]</span></span><br><span class="line"><span class="string">name=Kubernetes</span></span><br><span class="line"><span class="string">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">gpgcheck=0</span></span><br><span class="line"><span class="string">repo_gpgcheck=0</span></span><br><span class="line"><span class="string">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">yum clean all </span><br><span class="line">yum makecache</span><br><span class="line"></span><br><span class="line">yum install -y tc</span><br></pre></td></tr></table></figure>
<h2 id="k8s-node组件安装"><a href="#k8s-node组件安装" class="headerlink" title="k8s node组件安装"></a>k8s node组件安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y  kubelet kubeadm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 兼容性处理 systemd</span></span><br><span class="line"><span class="built_in">echo</span>  <span class="string">&#x27;KUBELET_EXTRA_ARGS=&quot;--cgroup-driver=systemd&quot;&#x27;</span> &gt; /etc/sysconfig/kubelet</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> kubelet</span><br><span class="line">systemctl start kubelet</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置cricl 的endpoint</span></span><br><span class="line">crictl config runtime-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line">crictl config image-endpoint unix:///run/containerd/containerd.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置k8s镜像版本（不配置默认拉去latest 最新版）</span></span><br><span class="line"><span class="comment"># kubeadm config images list --kubernetes-version=v1.24.3</span></span><br></pre></td></tr></table></figure>

<h2 id="加入到集群"><a href="#加入到集群" class="headerlink" title="加入到集群"></a>加入到集群</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 错误处理</span></span><br><span class="line"><span class="comment"># kubeadm reset</span></span><br><span class="line"><span class="comment"># rm -fr  ~/.kube/config</span></span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 10.0.0.17:6443 --token 9t45vv.40lt4exfxmirt7q2 --discovery-token-ca-cert-hash sha256:65cfa9a08c89e81357f3e394757ebb6c6c8000020c2e7411248cac2c4ef79c2e</span><br></pre></td></tr></table></figure>

<h1 id="配置K8s容器网络"><a href="#配置K8s容器网络" class="headerlink" title="配置K8s容器网络"></a>配置K8s容器网络</h1><blockquote>
<p>master节点执行</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml --no-check-certificate</span><br><span class="line">vim calico.yaml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>配置yaml文件,正确的虚拟ip和网卡</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /CALICO_IPV4POOL_CIDR 进行查找，取消注释，将值改为pod-network-cidr的值</span></span><br><span class="line"><span class="comment"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class="line"><span class="comment"># chosen from this range. Changing this value after installation will have</span></span><br><span class="line"><span class="comment"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CALICO_IPV4POOL_CIDR</span></span><br><span class="line">   <span class="attr">value:</span> <span class="string">&quot;10.244.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ....</span></span><br><span class="line"><span class="comment"># /k8s,bgp 查找,同级新增如下</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">CLUSTER_TYPE</span></span><br><span class="line">   <span class="attr">value:</span> <span class="string">&quot;k8s,bgp&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">IP_AUTODETECTION_METHOD</span></span><br><span class="line">   <span class="attr">value:</span> <span class="string">&quot;interface=eth0&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果执行后没反应或者拉去calio镜像过慢，可以在master和node上手动拉取镜像</span></span><br><span class="line"><span class="comment"># crictl pull docker.io/calico/cni</span></span><br><span class="line"><span class="comment"># crictl pull docker.io/calico/node</span></span><br><span class="line">crictl pull docker.io/calico/cni:v3.23.3</span><br><span class="line">crictl pull docker.io/calico/node:v3.23.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查node和containerd运行状态</span></span><br><span class="line">kubectl get node -o wide</span><br><span class="line"></span><br><span class="line">crictl ps -a</span><br></pre></td></tr></table></figure>
<p><img src="http://42.193.14.174:31001/images/haruki/blog/cn/871EFB1C13E616DBFBEC9E43A273852E08CA7EF3090D79DBE50647C24447E91D.png"></p>
<h1 id="配置NFS共享存储"><a href="#配置NFS共享存储" class="headerlink" title="配置NFS共享存储"></a>配置NFS共享存储</h1><blockquote>
<p>由于ceph资源消耗太大，服务器数量和性能都不够，暂时只能用NFS，之后大概会在自己电脑上开虚拟机试着搭下ceph</p>
</blockquote>
<blockquote>
<p>nfs server: cd001 10.0.0.11</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y nfs-utils rpcbind <span class="comment"># 安装nfs和rpc</span></span><br><span class="line">systemctl <span class="built_in">enable</span> nfs-server</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> --now nfs-server</span><br><span class="line"><span class="built_in">mkdir</span> -p /srv/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看支持的nfs版本</span></span><br><span class="line">sudo <span class="built_in">cat</span> /proc/fs/nfsd/versions</span><br><span class="line">userdel -r nfsuser</span><br><span class="line"></span><br><span class="line"><span class="comment"># nfsserver端新增一个用户，客户端操作nfs目录时会使用该用户权限进行读写</span></span><br><span class="line">adduser -s /sbin/nologin -u 1010 -M nfsuser</span><br><span class="line"><span class="comment"># -u : 指定用户uid</span></span><br><span class="line"><span class="comment"># -M: --no-create-home  不创建用户home目录</span></span><br><span class="line"><span class="comment"># -s : --shell    指定用户的shell</span></span><br><span class="line">passwd nfsuser </span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /srv/nfs/</span><br><span class="line"><span class="built_in">chown</span> nfsuser.nfsuser /srv/nfs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有k8s集群内ip都需要添加进去</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/srv/nfs/ 10.0.0.17(rw,sync,no_root_squash,anonuid=1001,anongid=1001)&quot;</span> &gt; /etc/exports</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/srv/nfs/ 10.0.0.11(rw,sync,no_root_squash,anonuid=1001,anongid=1001)&quot;</span> &gt;&gt; /etc/exports</span><br><span class="line"><span class="comment"># rw:可读写</span></span><br><span class="line"><span class="comment"># ro: 只读</span></span><br><span class="line"><span class="comment"># no_root_squash：对root用户不压制，如果客户端以root用户写入，在服务端都映射为服务端的root用户</span></span><br><span class="line"><span class="comment"># root_squash： nfs服务：默认情况使用的是相反参数root_squash，如果客户端是用户root操作，会被压制成nobody用户</span></span><br><span class="line"><span class="comment"># all_squash:     不管客户端的使用nfs的用户是谁，都会压制成nobody用户</span></span><br><span class="line"><span class="comment"># insecure:   允许从客户端过来的非授权访问</span></span><br><span class="line"><span class="comment"># sync:     数据同步写入到内存和硬盘</span></span><br><span class="line"><span class="comment"># async:    数据先写入内存，不直接写入到硬盘</span></span><br><span class="line"><span class="comment"># anonuid: 指定uid的值，此uid必须存在于/etc/passwd中</span></span><br><span class="line"><span class="comment"># anongid:指定gid的值</span></span><br><span class="line"></span><br><span class="line">exportfs -arv</span><br></pre></td></tr></table></figure>
<blockquote>
<p>nfs client: master 10.0.0.17</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 查看公开的nfs</span></span><br><span class="line">showmount -e 10.0.0.11</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> -p /mnt/nfs/cd001</span><br><span class="line"><span class="comment"># 临时挂载</span></span><br><span class="line"><span class="comment"># mount 10.0.0.11:/srv/nfs    /mnt/nfs/cd001</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 永久挂载</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10.0.0.11:/srv/nfs    /mnt/nfs/cd001  nfs4    defaults        0       0&quot;</span> &gt;&gt;  /etc/fstab</span><br><span class="line">mount -a</span><br><span class="line"><span class="built_in">df</span> -TH</span><br><span class="line"><span class="comment"># k8s集群不需要挂载，写yaml后会自动进行持久挂载</span></span><br><span class="line">umount /mnt/nfs/cd001</span><br><span class="line"><span class="built_in">df</span> -TH</span><br></pre></td></tr></table></figure>
<p><img src="http://42.193.14.174:31001/images/haruki/blog/cn/A30C9689711F26C031325D2EE82625E7A353B232C0BF266975111C1C9CE4EC80.png"></p>
<h1 id="部署Nginx和MySql"><a href="#部署Nginx和MySql" class="headerlink" title="部署Nginx和MySql"></a>部署Nginx和MySql</h1><blockquote>
<p>部署可以公网访问的nginx和持久化存储的mysql服务<br>master节点</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新增和删除命名空间</span></span><br><span class="line"><span class="comment"># kubectl create namespace my-namespace</span></span><br><span class="line"><span class="comment"># kubectl delete namespace my-namespace</span></span><br><span class="line"><span class="comment"># kucectl apply -f my-namespace.yaml</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">public</span></span><br><span class="line">   <span class="attr">labels:</span></span><br><span class="line">     <span class="attr">name:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure>
<h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">vim nginx.yaml</span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:alpine</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-service</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">30080</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></table></figure>
<p><img src="http://42.193.14.174:31001/images/haruki/blog/cn/564E8CA73EF28D607516A539A84B538092DDF7F4D510372E9EF52AB14DE80D36.png"></p>
<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">vim mysql.yaml</span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span> <span class="comment">#为该Deployment设置key为app，value为mysql的标签</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span> <span class="comment">#副本数量</span></span><br><span class="line">  <span class="attr">selector:</span> <span class="comment">#标签选择器，与上面的标签共同作用</span></span><br><span class="line">    <span class="attr">matchLabels:</span> <span class="comment">#选择包含标签app:nginx的资源</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">template:</span> <span class="comment">#这是选择或创建的Pod的模板</span></span><br><span class="line">    <span class="attr">metadata:</span> <span class="comment">#Pod的元数据</span></span><br><span class="line">      <span class="attr">labels:</span> <span class="comment">#Pod的标签，上面的selector即选择包含标签app:nginx的Pod</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">spec:</span> <span class="comment">#期望Pod实现的功能（即在pod中部署）</span></span><br><span class="line">      <span class="attr">containers:</span> <span class="comment">#生成container，与docker中的container是同一种</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">mysql:latest</span> <span class="comment">#使用镜像mysql: 创建container，该container默认3306端口可访问</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3306</span>  <span class="comment"># 开启本容器的3306端口可访问</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">MYSQL_ROOT_PASSWORD</span></span><br><span class="line">          <span class="attr">value:</span> <span class="string">MTIzNDU2Cg==</span> <span class="comment"># echo &quot;123456&quot;  |base64</span></span><br><span class="line">        <span class="attr">volumeMounts:</span> <span class="comment">#挂载持久存储卷</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-data</span>  <span class="comment">#挂载设备的名字，与volumes[*].name 需要对应</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/var/lib/mysql</span>  <span class="comment">#挂载到容器的某个路径下</span></span><br><span class="line">          </span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">mysql-data</span>  <span class="comment">#和上面保持一致 这是本地的文件路径，上面是容器内部的路径</span></span><br><span class="line">        <span class="attr">nfs:</span></span><br><span class="line">          <span class="attr">server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.11</span> <span class="comment">#nfs服务器地址</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/srv/nfs/k8s_data/mysql</span>  <span class="comment">#此路径需要实现创建</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span> <span class="comment"># 服务类型为svc</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysql-service</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">3306</span>  <span class="comment"># 本service的端口</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">3306</span>  <span class="comment"># 对接的容器端口</span></span><br><span class="line">    <span class="attr">nodePort:</span> <span class="number">32001</span> <span class="comment"># nodeport即主机公网访问的端口</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span>  <span class="comment"># svc模式为nodeport</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl apply -f mysql.yaml</span><br><span class="line"><span class="comment"># 可以正常连接mysql并且nfs服务器有持久化数据了</span></span><br></pre></td></tr></table></figure>
<p><img src="http://42.193.14.174:31001/images/haruki/blog/cn/77781C696156A40959D4159D81D2A959A873F2A9C7AFBA72C07D9EB0DF8AF7A1.png"><br><img src="http://42.193.14.174:31001/images/haruki/blog/cn/0ED4585667FEECFEFB5A26AD2C72BE3470E6E618DBBA343D6E19402FCA5688AE.png"></p>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>CloudComputing</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux的简介和安装</title>
    <url>/2021-01-01/Linux-introduction-and-installation/</url>
    <content><![CDATA[<h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><ul>
<li>Linux系统和红帽认证的基本介绍</li>
<li>RHEL8.0系统的安装</li>
<li>掌握开源软件的本质</li>
<li>探讨linux的起源</li>
<li>Red Hat操作系统的发行版</li>
<li>其他Linux系统的发行版</li>
<li>了解linux的基本原理</li>
</ul>
<h1 id="linux系统安装"><a href="#linux系统安装" class="headerlink" title="linux系统安装"></a>linux系统安装</h1><p>CentOS下载：<a href="https://www.centos.org/download/">https://www.centos.org/download/</a><br>DVD ISO：标准安装版，一般下载这个就可以了（推荐）<br>Everything ISO：对完整版安装盘的软件进行补充，集成所有软件。（包含一套完整的软件包，可以用来安装系统或者填充本地镜像）<br>Minimal ISO：迷你版，小巧、安装快速、自带的软件少<br>CentOS所有历史版本的下载地址：<a href="http://archive.kernel.org/centos-vault/">http://archive.kernel.org/centos-vault/</a><br><a href="https://www.lofter.com/lpost/4ba01091_1cabbd565">rhel8安装手册</a></p>
<span id="more"></span>  

<h1 id="什么是操作系统？"><a href="#什么是操作系统？" class="headerlink" title="什么是操作系统？"></a>什么是操作系统？</h1><p>操作系统，英文名称Operating System，简称OS，是计算机系统中必不可少的基础系统软件，它是应用程序运行以及用户操作必备的基础环境支撑，是计算机系统的核心。  </p>
<p><img src="http://42.193.14.174:31001/images/haruki/blog/cn/96F0C320ADD182842FBA7D0D28146A5183660388D3149919CAB5C0163FAC9C5A.png" alt="操作系统与计算机硬件软件关系"></p>
<h1 id="什么是Linux？"><a href="#什么是Linux？" class="headerlink" title="什么是Linux？"></a>什么是Linux？</h1><p>和Windows操作系统软件一样，Linux也是一个操作系统软件。<br>Linux内核最初只是由芬兰人李纳斯·托瓦兹（Linus Torvalds）在赫尔辛基大学上学时出于个人爱好而编写的。<br>Linux是一套免费使用和自由传播的，是一个基于POSIX（POSIX表示可移植操作系统接口，是个标准）的多用户、多任务、支持多线程和多CPU的操作系统。 </p>
<p><strong>Linux的内核版本和发行版本</strong><br>内核版本下载地址：<a href="https://www.kernel.org/">https://www.kernel.org/</a> ，只有99M多一点是Linux操作系统的真正的核心。<br>Linux的发行版说简单点就是将Linux内核与应用软件做一个打包。<br>目前市面上较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、TurboLinux、BluePoint、RedFlag、Xterm、SlackWare等很多很多，发行版本可能有上千种之多，各个发行版本之间的主要区别就是安装软件的方式可能不同，其他主要的操作命令啊什么的基本雷同，因为都是一个内核。  </p>
<p><strong>Linux应用领域</strong><br>物联网、云计算、大数据使用的嵌入式、c++、JAVA、PHP等底层应用软件都是在Linux操作系统上,各种场合都有使用各种Linux发行版，通常服务器使用Linux，未来国产化服务器都是安装的Linux操作系统。</p>
<p><strong>Linux发展史</strong>  </p>
<ul>
<li><strong>1984年</strong>，Richard Stallman发起了GNU源代码开放计划并制定了著名的GPL许可协议。</li>
<li><strong>1987年</strong>，GNU计划获得了一项重大突破—gcc编译器发布</li>
<li><strong>1991年10月</strong>，芬兰赫尔辛基大学的在校生Linus Torvalds编写了一款名为Linux的操作系统。该系统因其较高的代码质量且基于GNU GPL许可协议的开放源代码特性，迅速得到了GNU计划和一大批黑客程序员的支持。</li>
<li><strong>1994年1月</strong>，Bob Young在Linux系统内核的基础之上，集成了众多的源代码和程序软件，发布了红帽系统并开始出售技术服务，这进一步推动了Linux系统的普及。</li>
<li><strong>2020年3月</strong>，Linux内核已经发展到了5.6版本，并且Linux系统版本也有数百个之多，但它们依然都使用Linus Torvalds开发、维护的Linux系统内核。RedHat公司也成为了开源行业及Linux系统的带头公司</li>
</ul>
<p><strong>发展历程</strong>  </p>
<ul>
<li><strong>Unix</strong>：1970年1月1日 贝尔实验室 开源→闭源，Richard Stallman发起了GNU：GNU is not unix 计划 开源</li>
<li><strong>Linux</strong>：1991年 unix架构 最早为内核kernel 控制硬件，硬件←→kernel←→应用程序，1991年 内核 1.0v版本—5.6v版本 红帽是外层操作系统  GNU&#x2F;Linux</li>
</ul>
<p><strong>红帽发行版本</strong><br>Linux分发是基于linux内核的操作系统  </p>
<ul>
<li><strong>Red Hat Enterprise Linux</strong>（红帽企业版 Linux） 企业版<ul>
<li>应用程序和功能更稳定</li>
<li>有专业的技术支持服务</li>
</ul>
</li>
<li><strong>Fedora</strong>（费多拉） 桌面 个人 图形界面 功能新 不稳定应用更多，功能更新<ul>
<li>社区支持(不提供Red Hat官方支持)</li>
<li>针对个人的操作系统</li>
</ul>
</li>
<li><strong>Centos</strong>（社区企业操作系统） community ent：enterprise os 社区企业版 没有服务 需要运维人员<ul>
<li>社区企业操作系统</li>
<li>基于Red Hat Enterprise Linux开发</li>
<li>完全免费，但不提供任何商业支持</li>
</ul>
</li>
</ul>
<p><strong>红帽公司</strong>  </p>
<ul>
<li>红帽RedHat：开源界的领导者 纯软件公司  但2019年被IBM收购了</li>
<li>IBM：闭源 硬件——软件一体 自身兼容性好 云</li>
</ul>
<h1 id="什么是开源软件？"><a href="#什么是开源软件？" class="headerlink" title="什么是开源软件？"></a>什么是开源软件？</h1><p>开源软件：软件的源代码共享给所有人</p>
<p><strong>自由软件基金会定义了四大自由：</strong>  </p>
<ul>
<li>允许以任何目的运行软件</li>
<li>允许学习和修改软件的源代码</li>
<li>允许重新发布软件</li>
<li>允许开发软件的衍生版本</li>
</ul>
<p><strong>开源软件对比闭源软件的优势</strong>  </p>
<ul>
<li><strong>低风险</strong>：使用闭源软件无疑把命运交付给他人，一旦封闭的源代码没有人来维护，你将进退维谷；而且相较于商业软件公司，开源社区很少存在倒闭的问题。</li>
<li><strong>低成本</strong>：开源工作者都是在幕后默默且无偿地付出劳动成果，为美好的世界贡献一份力量，因此使用开源社区推动的软件项目可以节省大量的人力、物力和财力。</li>
<li><strong>高品质</strong>：相较于闭源软件产品，开源项目通常是由开源社区来研发及维护的，参与编写、维护、测试的用户量众多，bug修复及时。</li>
<li><strong>更透明</strong>：没有哪个会把木马、后门等放到开放的源代码中，这样无疑是把自己的罪行暴露在阳光之下。</li>
</ul>
<h1 id="Linux基本准则"><a href="#Linux基本准则" class="headerlink" title="Linux基本准则"></a>Linux基本准则</h1><ul>
<li>一切都是文件(包括硬件)</li>
<li>小而功能单一的应用程序</li>
<li>组合多个程序一起执行复杂的任务</li>
<li>跟用户操作界面无关</li>
<li>以文本文件形式保存配置数据</li>
</ul>
<h1 id="单元小结"><a href="#单元小结" class="headerlink" title="单元小结"></a>单元小结</h1><ul>
<li>RHEL8.0系统安装</li>
<li>开源软件</li>
<li>Linux的起源</li>
<li>红帽的各个发行版</li>
<li>Linux的基本原则</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>rhel8</category>
      </categories>
  </entry>
  <entry>
    <title>Linux的基本使用</title>
    <url>/2021-01-02/Linux-Basic-use/</url>
    <content><![CDATA[<h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><ul>
<li>登录Red Hat Enterprise Linux系统</li>
<li>从控制台启动图形</li>
<li>执行简单的linux命令</li>
<li>编辑纯文本文件</li>
<li>掌握root特性</li>
</ul>
<h1 id="简单的命令"><a href="#简单的命令" class="headerlink" title="简单的命令"></a>简单的命令</h1><table>
<thead>
<tr>
<th>命令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>date</td>
<td>显示日期</td>
</tr>
<tr>
<td>cal</td>
<td>显示日历</td>
</tr>
<tr>
<td>passwd</td>
<td>修改密码</td>
</tr>
<tr>
<td>id</td>
<td>显示当前用户信息</td>
</tr>
<tr>
<td>useradd</td>
<td>创建用户</td>
</tr>
<tr>
<td>su -</td>
<td>切换用户</td>
</tr>
<tr>
<td>vim</td>
<td>文本编辑器的使用</td>
</tr>
</tbody></table>
<span id="more"></span>  

<h1 id="历史记录（history）"><a href="#历史记录（history）" class="headerlink" title="历史记录（history）"></a>历史记录（history）</h1><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>History</td>
<td>查看所有历史记录</td>
</tr>
<tr>
<td>history N</td>
<td>列出最近的N条历史记录</td>
</tr>
<tr>
<td>!N</td>
<td>调用第N条历史记录</td>
</tr>
<tr>
<td>!string</td>
<td>调用最近一条以string开头的命令</td>
</tr>
<tr>
<td>!$</td>
<td>调用最后一条命令</td>
</tr>
<tr>
<td>上下键</td>
<td>查找历史记录</td>
</tr>
<tr>
<td>Ctrl+r</td>
<td>搜索历史记录</td>
</tr>
<tr>
<td>Alt+.</td>
<td>调用上一条命令的最后一个参数</td>
</tr>
<tr>
<td>Esc+.</td>
<td>调用上一条命令的最后一个参数</td>
</tr>
</tbody></table>
<h1 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h1><p>如果最开始没有装GUI图形界面，还需要装X-window，有两种桌面工具 GNOME和KDE<br>控制台（以前）：键盘、鼠标、显示器等硬件<br>控制台（现在）：即命令行、图形界面等操作界面</p>
<ul>
<li>典型的Linux系统运行5个虚拟控制台和1个图形控制台</li>
<li>按CTRL-ALT-F1键可进入图形控制台</li>
<li>使用CTRL-ALT-F[2-6]键可切换不同虚拟控制台</li>
<li>在虚拟控制台执行startx可以运行图形，前提是装了图形界面（startx没有切换控制台，只是在当前</li>
<li>控制台开启了图形应用程序）</li>
</ul>
<h1 id="gnome-terminal桌面工具"><a href="#gnome-terminal桌面工具" class="headerlink" title="gnome-terminal桌面工具"></a>gnome-terminal桌面工具</h1><table>
<thead>
<tr>
<th>操作</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>Ctrl-Shift-t</td>
<td>创建标签页</td>
</tr>
<tr>
<td>Ctrl-PgUp&#x2F;PgDn</td>
<td>在标签页之间切换</td>
</tr>
<tr>
<td>Alt+[123…]</td>
<td>在标签页之间切换</td>
</tr>
<tr>
<td>Ctrl-Shift-c</td>
<td>复制已选内容</td>
</tr>
<tr>
<td>Ctrl-Shift-v</td>
<td>粘贴复制的内容</td>
</tr>
<tr>
<td>Shift-PgUp&#x2F;PgDn</td>
<td>在标签页上下滚动</td>
</tr>
<tr>
<td>Ctrl+l</td>
<td>清屏</td>
</tr>
<tr>
<td>Ctrl+Shift++</td>
<td>放大</td>
</tr>
<tr>
<td>Ctrl+-</td>
<td>缩小</td>
</tr>
</tbody></table>
<h1 id="单元小结"><a href="#单元小结" class="headerlink" title="单元小结"></a>单元小结</h1><ul>
<li>登录操作系统</li>
<li>掌握桌面图形工具的使用</li>
<li>root用户的本质</li>
<li>一些简单命令的执行</li>
<li>tab的使用</li>
<li>历史记录的调用</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>rhel8</category>
      </categories>
  </entry>
  <entry>
    <title>运行命令和获取帮助</title>
    <url>/2021-01-03/Run-commands-and-get-help/</url>
    <content><![CDATA[<h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><ul>
<li>在提示符下执行命令</li>
<li>掌握命令的语法</li>
<li>学习使用一些简单命令</li>
<li>学会使用系统内部的一些帮助</li>
<li>学会使用red hat的在线文档</li>
</ul>
<h1 id="命令的语法"><a href="#命令的语法" class="headerlink" title="命令的语法"></a>命令的语法</h1><p>  command options arguments   </p>
<ul>
<li>项与项之间以空格分隔开</li>
<li>options修饰一个命令的行为<ul>
<li>单个字母作为选项前一般都带有-,例如-a,-b,-c或者-abc</li>
<li>单词作为选项前通常带有–,例如:–help</li>
</ul>
</li>
<li>参数是一个文件名目录或者具体的某个对象</li>
<li>多个命令用;分隔</li>
</ul>
<table>
<thead>
<tr>
<th>命令</th>
<th>选项</th>
<th>参数</th>
</tr>
</thead>
<tbody><tr>
<td>做什么，如：passwd、ls、id</td>
<td>修饰命令的行为（功能），如：-a、-l、-la</td>
<td>具体的某个对象</td>
</tr>
</tbody></table>
<span id="more"></span>  

<h1 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h1><p>不要去尝试记住一切，不同级别的帮助资源： whatis、 command –help、 man、pinfo、 &#x2F;usr&#x2F;share&#x2F;doc、 红帽官方产品文档 </p>
<p><strong>whatis命令</strong>  </p>
<ul>
<li>显示命令的简短描述</li>
<li>基于数据库的查询，定时更新</li>
<li>在安装完后并不能马上使用</li>
</ul>
<p><strong>–help命令</strong>  </p>
<ul>
<li>列出命令常用的语法和参数</li>
<li>大部分命令支持该选项</li>
<li>特殊符号解读<ul>
<li>在[]中的参数是可选的</li>
<li>大写的参数或者在&lt;&gt;中都表示变量</li>
<li>文本后面跟随…表示一个列表</li>
<li>x|y|z表示”x 或者y或者z”</li>
</ul>
<ul>
<li>-abc表示”任意-a,-b或者-c的任意组合”</li>
</ul>
</li>
<li>例如：date –help</li>
</ul>
<p><strong>man使用方法：</strong><br>   man -k 关键字<br>   man [章节信息] 命令或者配置文件 </p>
<table>
<thead>
<tr>
<th>命令</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>空格键</td>
<td>向下翻页</td>
</tr>
<tr>
<td>PageUp&#x2F;PageDown</td>
<td>向上向下翻页</td>
</tr>
<tr>
<td>g&#x2F;G</td>
<td>回到开头&#x2F;末尾</td>
</tr>
<tr>
<td>&#x2F;string</td>
<td>搜索string关键词</td>
</tr>
<tr>
<td>n&#x2F;N</td>
<td>在关键词之间向下和向上查找</td>
</tr>
<tr>
<td>q</td>
<td>退出man帮助页面</td>
</tr>
</tbody></table>
<p><strong>帮助手册（manual）</strong><br>位置：&#x2F;usr&#x2F;share&#x2F;man&#x2F;；man手册标准章节，常用选项：1、用户命令；5、文件格式；8、系统管理命令 </p>
<table>
<thead>
<tr>
<th align="center">章节</th>
<th>Ecglish</th>
<th>中文</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td>User commands</td>
<td>用户命令</td>
</tr>
<tr>
<td align="center">2</td>
<td>System calls</td>
<td>系统调用库</td>
</tr>
<tr>
<td align="center">3</td>
<td>Library functions</td>
<td>库函数</td>
</tr>
<tr>
<td align="center">4</td>
<td>Special files</td>
<td>特殊文件</td>
</tr>
<tr>
<td align="center">5</td>
<td>File formats</td>
<td>文件格式</td>
</tr>
<tr>
<td align="center">6</td>
<td>Games</td>
<td>游戏</td>
</tr>
<tr>
<td align="center">7</td>
<td>Conventions</td>
<td>约定</td>
</tr>
<tr>
<td align="center">8</td>
<td>Manintenance commands</td>
<td>系统管理命令（一般只有root能执行的命令）</td>
</tr>
<tr>
<td align="center">9</td>
<td>Linux Kernel API</td>
<td>Linux内核 API</td>
</tr>
</tbody></table>
<p><strong>pinfo帮助文档</strong>   </p>
<ul>
<li>文档结构由超链接式的 info 节点组成，记录了很多复杂命令和概念说明</li>
<li>在 RHEL 中可以使用 info 和 pinfo 两个命令浏览 info page</li>
</ul>
<table>
<thead>
<tr>
<th>命令操作</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>PageUp或者b</td>
<td>向上滚动一个屏幕</td>
</tr>
<tr>
<td>PageDown或者空格键</td>
<td>向下滚动一个屏幕</td>
</tr>
<tr>
<td>d</td>
<td>显示主题目录</td>
</tr>
<tr>
<td>u</td>
<td>显示主题的父节点</td>
</tr>
<tr>
<td>向上&#x2F;向下箭头键</td>
<td>向上&#x2F;向下滚动到下一个超链接</td>
</tr>
<tr>
<td>enter键</td>
<td>打开光标处的主题</td>
</tr>
<tr>
<td>q</td>
<td>打开光标处的主题</td>
</tr>
</tbody></table>
<p><strong>RPM包文档</strong><br>本地帮助文档<br>安装软件包后，在doc目录下释放文档<br>&#x2F;usr&#x2F;share&#x2F;doc&#x2F;pa<br>可使用浏览器查看</p>
<p><strong>redhat在线文档</strong><br>红帽官方文档 <a href="https://access.redhat.com/">https://access.redhat.com</a></p>
<h1 id="单元小结"><a href="#单元小结" class="headerlink" title="单元小结"></a>单元小结</h1><ul>
<li>命令的语法规则</li>
<li>man帮助使用</li>
<li>系统内其他帮助资源</li>
<li>红帽在线文档查阅</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>rhel8</category>
      </categories>
  </entry>
  <entry>
    <title></title>
    <url>/2022-07-03/undefined/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>了解文件系统的和基本操作</title>
    <url>/2021-01-04/Understand-the-file-system-and-basic-operations/</url>
    <content><![CDATA[<h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><ul>
<li>描述分件系统重要的组成部分</li>
<li>复制，移动和删除文件</li>
<li>创建文件和文件夹</li>
<li>了解时间戳的概念</li>
</ul>
<h1 id="Linux文件系统的组成"><a href="#Linux文件系统的组成" class="headerlink" title="Linux文件系统的组成"></a>Linux文件系统的组成</h1><p>整个文件系统由 分区–目录 对接<br>文件都是从根开始的，无论文件在哪个分区，都可以通过根访问到  </p>
<ul>
<li>文件和目录构成单根的倒树状结构</li>
<li>文件系统从根目录开始，表示为一个单独的’&#x2F;’(斜线)字符</li>
<li>命名大小写敏感</li>
<li>路径以’&#x2F;’为分隔</li>
</ul>
<pre class="mermaid">	graph TD
    A(/)-->B1(bin)
    A-->B2(boot)
    A-->B3(dev)
    A-->B4(etc)
    A-->B5(home)
        B5-->D1(alice)
        B5-->D2(bob)
        B5-->D3(eve)
    A-->B6(root)
    A-->B7(run)
    A-->B8(sbin)
    A-->B9(tmp)
    A-->B10(usr)
        B10-->D4(bin)
        B10-->D5(local)
        B10-->D6(sbin)
        B10-->D7(tmp)		
    A-->B11(var)
        B11-->D8(tmp)</pre>
<span id="more"></span>  

<p><strong>执行命令：ls -la；显示白色是文件，蓝色是目录</strong>  </p>
<table>
<thead>
<tr>
<th>d</th>
<th>r-xr-x—.</th>
<th>15</th>
<th>root</th>
<th>root</th>
<th>4096</th>
<th>Jul  3 04:43</th>
<th>.</th>
</tr>
</thead>
<tbody><tr>
<td>文件</td>
<td>权限</td>
<td>文件:链接数&#x2F;目录:子目录数</td>
<td>拥有人</td>
<td>拥有组</td>
<td>文件大小（默认字节）</td>
<td>最后一次修改时间</td>
<td>文件名</td>
</tr>
</tbody></table>
<h1 id="基本目录"><a href="#基本目录" class="headerlink" title="基本目录"></a>基本目录</h1><ol>
<li><strong>&#x2F;：根目录</strong>，位于Linux文件系统目录结构的顶层，一般根目录下只存放目录，不要存放文件，&#x2F;etc、&#x2F;bin、&#x2F;dev、&#x2F;lib、&#x2F;sbin应该和根目录放置在一个分区中。 </li>
<li><strong>&#x2F;bin，&#x2F;usr&#x2F;bin：这两个目录为命令文件目录</strong>，也称为二进制目录。包含了供系统管理员及普通用户使用的重要的linux命令和二进制（可执行）文件，包含shell解释器等。在linux 7或者更高的版本中，&#x2F;bin和&#x2F;usr&#x2F;bin，&#x2F;sbin和&#x2F;usr&#x2F;sbin，&#x2F;lib和&#x2F;usr&#x2F;lib、lib64和&#x2F;usr&#x2F;lib64中，&#x2F;中的目录是&#x2F;usr&#x2F;中对应目录软链接。相当于win的快捷方式 访问&#x2F;bin和&#x2F;usr&#x2F;bin是一样的</li>
<li><strong>&#x2F;boot： 该目录中存放系统的内核文件和引导装载程序文件</strong>，&#x2F;boot&#x2F;vmlinuz为linux的内核文件，以及&#x2F;boot&#x2F;gurb。一般情况下都是单独分区，分区大小200M即可。</li>
<li><strong>&#x2F;dev： 设备（device）文件目录</strong>，存放linux系统下的设备文件，访问该目录下某个文件，相当于访问某个设备，存放连接到计算机上的设备（终端、磁盘驱动器、光驱及网卡等）的对应文件，包括字符设备和块设备等，常用的是挂载光驱： <strong>mount &#x2F;dev&#x2F;cdrom  &#x2F;mnt。</strong> </li>
<li><strong>&#x2F;etc： 系统配置文件存放的目录</strong>，该目录存放系统的大部分配置文件和子目录，不建议在此目录下存放可执行文件，重要的配置文件有&#x2F;etc&#x2F;inittab、&#x2F;etc&#x2F;fstab、&#x2F;etc&#x2F;init.d、&#x2F;etc&#x2F;X11（X Window系统有关）、&#x2F;etc&#x2F;sysconfig（与网络有关）、&#x2F;etc&#x2F;xinetd.d等等，修改配置文件之前记得备份。该目录下的文件由系统管理员来使用，普通用户对大部分文件有只读权限。</li>
<li><strong>&#x2F;home： 系统默认的用户宿主目录</strong>，新增用户账号时，用户的宿主目录都存放在此目录下，表示当前用户的宿主目录，test表示用户test的宿主目录。如果做文件服务器，建议单独分区，并设置较大的磁盘空间，方便用户存放数据。用户传上来的数据和其他系统文件隔离，安全性高些！</li>
<li><strong>&#x2F;lib，&#x2F;usr&#x2F;lib，&#x2F;usr&#x2F;local&#x2F;lib：系统使用的函数库的目录</strong>，程序在执行过程中，需要调用一些额外的参数时需要函数库的协助，该目录下存放了各种编程语言库。典型的linux系统包含了C、C++和FORTRAN语言的库文件。&#x2F;lib目录下的库映像文件可以用来启动系统并执行一些命令，目录&#x2F;lib&#x2F;modules包含了可加载的内核模块，&#x2F;lib目录存放了所有重要的库文件，其他的库文件则大部分存放在&#x2F;usr&#x2F;lib目录下。</li>
<li><strong>&#x2F;mnt，&#x2F;media： mnt目录主要用来临时挂载文件系统，为某些设备提供默认挂载点，如cdrom</strong>。这样当挂载了一个设备如光驱时，就可以通过访问目录&#x2F;mnt下的文件来访问相应的光驱上的文件了。</li>
<li><strong>&#x2F;opt： 给主机额外安装软件所摆放的目录</strong>。如果想要自行安装新的KDE 桌面软件，可以将该软件安装在该目录下。以前的 Linux 系统中，习惯放置在 &#x2F;usr&#x2F;local 目录下。</li>
<li><strong>&#x2F;proc： 此目录的数据都在内存中</strong>，如系统核心，外部设备，网络状态，由于数据都存放于内存中，所以不占用磁盘空间，比较重要的目录有&#x2F;proc&#x2F;cpuinfo、&#x2F;proc&#x2F;interrupts、&#x2F;proc&#x2F;dma、&#x2F;proc&#x2F;ioports、&#x2F;proc&#x2F;net&#x2F;*等。</li>
<li><strong>&#x2F;root：系统管理员root的宿主目录</strong>，系统第一个启动的分区为&#x2F;，所以最好将&#x2F;root和&#x2F;放置在一个分区下。</li>
<li><strong>&#x2F;sbin，&#x2F;usr&#x2F;sbin，&#x2F;usr&#x2F;local&#x2F;sbin：放置系统管理员使用的可执行命令</strong>，如fdisk、shutdown、mount等。与&#x2F;bin不同的是，这几个目录是给系统管理员root使用的命令，一般用户只能”查看”而不能设置和使用。</li>
<li><strong>&#x2F;tmp： 一般用户或正在执行的程序临时存放文件的目录</strong>,任何人都可以访问,重要数据不可放置在此目录下。</li>
<li><strong>&#x2F;srv： 服务启动之后需要访问的数据目录</strong>，如www服务需要访问的网页数据存放在&#x2F;srv&#x2F;www内。</li>
<li><strong>&#x2F;usr： 应用程序存放目录</strong>，&#x2F;usr&#x2F;bin 存放应用程序， &#x2F;usr&#x2F;share 存放共享数据，&#x2F;usr&#x2F;lib 存放不能直接运行的，却是许多程序运行所必需的一些函数库文件，&#x2F;usr&#x2F;local 存放软件升级包，&#x2F;usr&#x2F;share&#x2F;doc 系统说明文件存放目录。</li>
<li><strong>&#x2F;usr&#x2F;share&#x2F;man:程序说明文件存放目录</strong>，使用 man ls时会查询&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz的内容，建议单独分区，设置较大的磁盘空间。</li>
<li><strong>&#x2F;var： 放置系统执行过程中经常变化的文件，如随时更改的日志文件</strong> &#x2F;var&#x2F;log。&#x2F;var&#x2F;log&#x2F;message： 所有的登录文件存放目录。&#x2F;var&#x2F;spool&#x2F;mail： 邮件存放的目录。建议单独分区，设置较大的磁盘空间。</li>
<li><strong>&#x2F;run</strong>：目录中存放的是自系统启动以来描述系统信息的文件</li>
<li><strong>&#x2F;sys</strong>： 挂载点上挂载sysfs 虚拟文件系统，我们可以通过sysfs 文件系统访问 Linux 内核</li>
</ol>
<h1 id="重要目录"><a href="#重要目录" class="headerlink" title="重要目录"></a>重要目录</h1><p><strong>&#x2F;etc：这个目录相当重要</strong>，如前所述，你的开机与系统数据文件均在这个目录之下，因此当这个目录被破坏，那你的系统大概也就差不多该死掉了！而在往后的文件中，你会发现我们常常使用这个目录下的 &#x2F;etc&#x2F;rc.d&#x2F;init.d 这个子目录，因为这个 init.d 子目录是开启一些 Linux 系统服务的 scripts 的地方。而在 &#x2F;etc&#x2F;rc.d&#x2F;rc.local 这个文件是开机的执行档。<br><strong>&#x2F;bin, &#x2F;sbin, &#x2F;usr&#x2F;bin, &#x2F;usr&#x2F;sbin：这是系统预设的执行文件的放置目录</strong>，例如 root 常常使用的 userconf, netconf, perl, gcc, c++ 等等的数据都放在这几个目录中，所以如果你在提示字符下找不到某个执行档时，可以在这四个目录中查一查！其中， &#x2F;bin, &#x2F;usr&#x2F;bin 是给系统使用者使用的指令，而 &#x2F;sbin, &#x2F;usr&#x2F;sbin 则是给系统管理员使用的指令！<br><strong>&#x2F;usr&#x2F;local：这是系统预设的让你安装你后来升级的套件的目录</strong>。例如，当你发现有更新的 Web 套件（如 Apache ）可以安装，而你又不想以 rpm 的方式升级你的套件，则你可以将 apache 这个套件安装在 &#x2F;usr&#x2F;local 底下。安装在这里有个好处，因为目前大家的系统都是差不多的，所以如果你的系统要让别人接管的话，也比较容易上手！也比较容易找的到数据！因此，如果你有需要的话，通常都会将 &#x2F;usr&#x2F;local&#x2F;bin 这个路径加到 path 中。<br><strong>&#x2F;home：这个是系统将有账号的人口的家目录设置的地方。</strong> 　<br><strong>&#x2F;var：这个路径就重要了！不论是登入、各类服务的问题发生时的记录、以及常态性的服务记录等等的记录目录</strong>，所以当你的系统有问题时，就需要来这个目录记录的文件数据中察看问题的所在！而 mail 的预设放置也是在这里，所以他是很重要的 。<br><strong>&#x2F;usr&#x2F;share&#x2F;man, &#x2F;usr&#x2F;local&#x2F;man： 这两个目录为放置各类套件说明档的地方</strong>，例如你如果执行 man man，则系统会自动去找这两个目录下的所有说明文件。  </p>
<h1 id="一些常用文件目录"><a href="#一些常用文件目录" class="headerlink" title="一些常用文件目录"></a>一些常用文件目录</h1><p><strong>用户账号文件：&#x2F;etc&#x2F;passwd</strong></p>
<table>
<thead>
<tr>
<th>字段1</th>
<th>字段2</th>
<th>字段3</th>
<th>字段4</th>
<th>字段5</th>
<th>字段6</th>
<th>字段7</th>
</tr>
</thead>
<tbody><tr>
<td>user01</td>
<td>x:</td>
<td>1000:</td>
<td>1000:</td>
<td>User One:</td>
<td>&#x2F;home&#x2F;user01</td>
<td>&#x2F;bin&#x2F;bash</td>
</tr>
<tr>
<td>用户名称</td>
<td>密码占位符“x”(表示登录该用户时需要密码，红帽8去掉也需要密码）</td>
<td>用户帐号的UID号</td>
<td>用户的私有组</td>
<td>用户描述信息</td>
<td>用户的主目录</td>
<td>登录Shell信息</td>
</tr>
</tbody></table>
<p><strong>密码文件：&#x2F;etc&#x2F;shadow</strong></p>
<table>
<thead>
<tr>
<th>字段1</th>
<th>字段2</th>
<th>字段3</th>
<th>字段4</th>
<th>字段5</th>
<th>字段6</th>
<th>字段7</th>
<th>字段8</th>
<th>字段9</th>
</tr>
</thead>
<tbody><tr>
<td>user03</td>
<td>$6$CSsx…output omitted…:</td>
<td>17933</td>
<td>0</td>
<td>99999:</td>
<td>7</td>
<td>2</td>
<td>18113</td>
<td></td>
</tr>
<tr>
<td>用户帐号的名称</td>
<td>加密的密码字串信息</td>
<td>最近一次修改密码的时间，表示从1970.01.01至今的天数</td>
<td>密码的最短使用天数，默认值为0，没有要求</td>
<td>密码的最长有效天数，默认值为99999</td>
<td>密码即将到期警告天数，默认值为7</td>
<td>在密码过期之后账号保持活动的天数，指定天数后账号被锁定，成为无效</td>
<td>帐号失效时间，默认值为空，以1970.01.01的天数表示</td>
<td>保留字段（未使用）</td>
</tr>
</tbody></table>
<p><strong>组信息文件：&#x2F;etc&#x2F;group</strong></p>
<p>| 字段1 | 字段2 | 字段3 | 字段4 |<br>| —– | —– |<br>|组的名称|密码占位符“x”|组的ID号|该组是user1，user2和user3的附加组|</p>
<p>#文件和目录名<br><strong>名字不能多于255个字符</strong><br><strong>所有字符都要求是有效的，除斜线(&#x2F;)之外</strong><br>不要使用某些特殊的字符在文件或者目录名中<br>当文件名中有特殊字符时应用引号保护引起来<br><strong>命名和大小写敏感</strong><br>例如:MAIL,Mail,mail和mAiL</p>
<h1 id="绝对路径和相对路径"><a href="#绝对路径和相对路径" class="headerlink" title="绝对路径和相对路径"></a>绝对路径和相对路径</h1><p><strong>绝对路径：</strong><br>以根开头的路径<br>文件位置的全路径<br>在任何位置都可以引用<br><strong>相对路径：</strong><br>不以斜线开头<br>当前工作目录的相对位置<br>在特定的位置才可以引用</p>
<h1 id="管理文件和目录的基本命令"><a href="#管理文件和目录的基本命令" class="headerlink" title="管理文件和目录的基本命令"></a>管理文件和目录的基本命令</h1><p><strong>ls</strong>：显示当前目录或者指定目录下的内容<br>使用<br>ls [options] [files or dirs]<br>示例<br>ls -a (包括隐藏文件)<br>ls -l (显示扩展信息)<br>ls -R(递归所有的目录)<br>ls -ld (显示目录和符号链接信息)</p>
<p><strong>mkdir</strong>：</p>
<ol>
<li>命令格式<br>mkdir [-选项] 目录…</li>
<li>命令功能<br>通过 mkdir 命令可以实现在指定位置创建指定的文件名的文件夹。<strong>要创建文件夹的用户必须对所创建的文件夹的父文件夹具有写权限</strong>。并且，所创建的文件夹不能与其父目录中的已经存在文件重名，即同一个目录下不能有同名的(区分大小写)。 </li>
<li>命令参数<br> -p, –parents 可以是一个路径名称。<strong>此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录</strong>,即一次可以建立多个目录;<br>-v, –verbose 每次创建新目录都显示信息</li>
</ol>
<p><strong>pwd</strong>：显示当前所在的目录的绝对路径</p>
<p><strong>cd</strong>：改变目录<br>改变到一个绝对或者相对路径<br>cd &#x2F;home&#x2F;joshua&#x2F;work；cd project&#x2F;docs<br>改变到上层目录<br>cd ..<br>改变目录到上一个工作目录<br>cd -<br>改变到当前用户的主目录<br>cd 或者cd ~<br>改变到某个用户的主目录<br>cd  ~username</p>
<p><strong>rmdir</strong>：删除空目录</p>
<p><strong>cp</strong>：命令主要用于复制文件或目录<br> cp [options] source… directory<br> l -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。<br> l -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。</p>
<p><strong>mv</strong>:命令用来为文件或目录改名、或将文件或目录移入其它位置。<br> mv source… directory</p>
<p><strong>rm</strong>：命令用于删除一个文件或者目录。<br> rm [options] name…<br> l -f 即使文件属性设为只读，也直接删除，无需逐一确认。<br> l -r 将目录及以下之文件一起删除。<br> rm -rf * 删除当前目录下的所有文件及目录</p>
<p><strong>touch</strong>：命令用于修改文件或者目录的时间属性。若文件不存在，系统会建立一个新的文件。<br>命令格式：touch  文件名</p>
<p><strong>cat</strong>：命令用显示文件内容。</p>
<p><strong>命令格式</strong>：cat [-选项] 文件<br>加参数：-n 或 –number：由 1 开始对所有输出的行数编号。</p>
<p><strong>more</strong>：命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示<br>l Enter 向下n行，需要定义。默认为1行<br>l 空格键 向下滚动一屏<br>l q 退出more</p>
<p><strong>less</strong>：工具也是对文件或其它输出进行分页显示的工具，应该说是linux正统查看文件内容的工具，功能极其强大。  </p>
<ol>
<li>命令格式<br>less [-选项] 文件 </li>
<li>命令功能<br>less 与 more 类似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动，而且 less 在查看之前不会加载整个文件。<br>&#x2F;字符串：向下搜索“字符串”的功能<br>?字符串：向上搜索“字符串”的功能<br>n：重复前一个搜索（与 &#x2F; 或 ? 有关），next<br>N：反向重复前一个搜索（与 &#x2F; 或 ? 有关）<br>Q 退出less 命令<br>Enter 向下n行，需要定义。默认为1行<br>空格键 向下滚动一屏<br>b键 向上滚动一屏<br>[pagedown]： 向下翻动一行<br>[pageup]：  向上翻动一行</li>
</ol>
<p><strong>head</strong>：用来显示档案的开头至标准输出中。如果指定了多于一个文件，在每一段输出前会给出文件名作为文件头。<br>head -n 5 log.txt ；说明：显示文件的前n行</p>
<p><strong>tail</strong>：命令用途是依照要求将指定的文件的最后部分输出  </p>
<ol>
<li>tail filename<br>说明：显示filename最后10行。</li>
<li>tail -F filename<br>说明：动态监视filename文件的尾部内容（默认10行，相当于增加参数 -n 10），刷新显示在屏幕上。退出，按下CTRL+C。</li>
<li>tail -n 20 filename<br>说明：显示filename最后20行。</li>
</ol>
<p><strong>file查看文件类型</strong>：查看文件类型<br>文件可以包含许多类型的数据<br>在文件打开之前先检查文件类型，然后再确定使用适当的命令或者应用程序<br>file [options] <filename>…</p>
<p><strong>tree</strong>：可以查看当前目录下的所有子目录和文件结构</p>
<h1 id="单元小结"><a href="#单元小结" class="headerlink" title="单元小结"></a>单元小结</h1><ul>
<li>Linux 文件系统层次结构</li>
<li>命令行文件管理工具</li>
<li>时间戳</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>rhel8</category>
      </categories>
  </entry>
  <entry>
    <title>Python基础知识</title>
    <url>/2021-06-21/python-basic-knowledge/</url>
    <content><![CDATA[<h1 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h1><p>CentOS8.2 &amp;&amp; Python 3</p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Python 3.6.8 (default, Apr 16 2020, 01:36:27)</span><br><span class="line">[GCC 8.3.1 20191121 (Red Hat 8.3.1-5)] on linux</span><br><span class="line">Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.</span><br></pre></td></tr></table></figure>
<p>微信图片_20220702225327.png</p>
]]></content>
      <categories>
        <category>python</category>
        <category>python3</category>
      </categories>
  </entry>
  <entry>
    <title>变量和简单数据类型</title>
    <url>/2021-06-22/Variables-and-simple-data-types/</url>
    <content><![CDATA[<h1 id="运行hello-world"><a href="#运行hello-world" class="headerlink" title="运行hello world"></a>运行hello world</h1><p>vim 1.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello Python world!&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">hello Python world!</span><br></pre></td></tr></table></figure>
<span id="more"></span>  

<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p>vim 2.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&quot;Hello Python world!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">hello Python world!</span><br></pre></td></tr></table></figure>
<p>vim 3.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&quot;Hello Python world!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br><span class="line">message = <span class="string">&quot;Hello world!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">hello Python world!</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure>

<h2 id="变量命名和使用"><a href="#变量命名和使用" class="headerlink" title="变量命名和使用"></a>变量命名和使用</h2><ul>
<li><p>变量名只能包含<strong>字母、数字</strong>和<strong>下划线</strong>。变量名只能是<strong>字母</strong>或<strong>下划线</strong>开头。例：message_1</p>
</li>
<li><p>变量名不能包含<strong>空格</strong>，但可以使用<strong>下划线</strong>来分隔单词</p>
</li>
<li><p>不能将<strong>Python关键字</strong>和<strong>函数名</strong>作为变量名使用，如：print</p>
</li>
</ul>
<h2 id="使用变量时的错误"><a href="#使用变量时的错误" class="headerlink" title="使用变量时的错误"></a>使用变量时的错误</h2><p>vim 4.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&quot;Hello world!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(mesage)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;4.py&quot;, line 2, in &lt;module&gt;      //第二行代码错误</span><br><span class="line">    print(mesage)       //列出了这个错误</span><br><span class="line">NameError: name &#x27;mesage&#x27; is not defined     //mesage无法识别</span><br></pre></td></tr></table></figure>
<h1 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h1><p>字符串就是一系列字符。在Python中，用引号括起来的都是字符串，其中的引号可以是<strong>单引号</strong>也可以是<strong>双引号</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;This is a string.&quot;</span></span><br><span class="line"><span class="string">&#x27;This is also a string.&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="使用方法修改字符串大小写"><a href="#使用方法修改字符串大小写" class="headerlink" title="使用方法修改字符串大小写"></a>使用方法修改字符串大小写</h2><p>vim 5.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;ada lovelace&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name.title())</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Ada Lovelace</span><br></pre></td></tr></table></figure>
<p>titile（）以首字母大写的方式显示每个单词，即将每个单词的首字母都改为大写。</p>
<p>vim 6.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">name = <span class="string">&quot;ada lovelace&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name.title())</span><br><span class="line"><span class="built_in">print</span>(name.lower())</span><br><span class="line"><span class="built_in">print</span>(name)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Ada Lovelace</span><br><span class="line">ada lovelace</span><br><span class="line">ada lovelace</span><br></pre></td></tr></table></figure>

<h2 id="合并字符串"><a href="#合并字符串" class="headerlink" title="合并字符串"></a>合并字符串</h2><p>vim 7.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">first_name = <span class="string">&quot;ada&quot;</span></span><br><span class="line">last_name = <span class="string">&quot;lovelace&quot;</span></span><br><span class="line">full_name = first_name + <span class="string">&quot; &quot;</span> + last_name</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(full_name)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello,&quot;</span> + full_name + <span class="string">&quot;!&quot;</span>)</span><br><span class="line">message = <span class="string">&quot;Hello,&quot;</span> + full_name.title() + <span class="string">&quot;!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">ada lovelace</span><br><span class="line">Hello,ada lovelace!</span><br><span class="line">Hello,Ada Lovelace!</span><br></pre></td></tr></table></figure>

<h2 id="使用制表符或换行符来添加空白"><a href="#使用制表符或换行符来添加空白" class="headerlink" title="使用制表符或换行符来添加空白"></a>使用制表符或换行符来添加空白</h2><p>vim 8.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Python&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Languages:\nPython\nC\nJava&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Languages:\n\tPython\n\tC\n\tJava&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Python</span><br><span class="line">Languages:</span><br><span class="line">Python</span><br><span class="line">C</span><br><span class="line">Java</span><br><span class="line">Languages:</span><br><span class="line">        Python</span><br><span class="line">        C</span><br><span class="line">        Java</span><br></pre></td></tr></table></figure>

<h2 id="删除空白"><a href="#删除空白" class="headerlink" title="删除空白"></a>删除空白</h2><p>vim 9.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">favorite_language = <span class="string">&#x27; python &#x27;</span></span><br><span class="line"><span class="built_in">print</span>(favorite_language)</span><br><span class="line"><span class="built_in">print</span>(favorite_language.rstrip())</span><br><span class="line"><span class="built_in">print</span>(favorite_language.strip())</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line"> python </span><br><span class="line"> python</span><br><span class="line">python </span><br></pre></td></tr></table></figure>

<h2 id="使用字符串时避免语法错误"><a href="#使用字符串时避免语法错误" class="headerlink" title="使用字符串时避免语法错误"></a>使用字符串时避免语法错误</h2><p>vim 10.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&#x27;One of Python&#x27;</span>s strengths <span class="keyword">is</span> its diverse community.<span class="string">&#x27;</span></span><br><span class="line"><span class="string">print(message)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">  File &quot;10.py&quot;, line 1</span><br><span class="line">    message = &#x27;One of Python&#x27;s strengths is its diverse community.&#x27;</span><br><span class="line">                             ^</span><br><span class="line">SyntaxError: invalid syntax</span><br></pre></td></tr></table></figure>

<p>vim 11.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message = <span class="string">&quot;One of Python&#x27;s strengths is its diverse community.&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">One of Python&#x27;s strengths is its diverse community.</span><br></pre></td></tr></table></figure>

<h2 id="Python-2-中的print语句"><a href="#Python-2-中的print语句" class="headerlink" title="Python 2 中的print语句"></a>Python 2 中的print语句</h2><p>vim 12.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&quot;Hello Python 2.7 World!&quot;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Hello Python 2.7 World!</span><br></pre></td></tr></table></figure>

<h1 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h1><h2 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h2><p>vim 13.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>( <span class="number">2</span> + <span class="number">3</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">3</span> - <span class="number">2</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">2</span> * <span class="number">3</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">3</span> / <span class="number">2</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">5</span><br><span class="line">1</span><br><span class="line">6</span><br><span class="line">1.5</span><br></pre></td></tr></table></figure>

<p>vim 14.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>( <span class="number">3</span> ** <span class="number">2</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">3</span> ** <span class="number">3</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">10</span> ** <span class="number">6</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">2</span> + <span class="number">3</span> * <span class="number">4</span> )</span><br><span class="line"><span class="built_in">print</span>( ( <span class="number">2</span> + <span class="number">3</span> ) * <span class="number">4</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">9</span><br><span class="line">27</span><br><span class="line">1000000</span><br><span class="line">14</span><br><span class="line">20</span><br></pre></td></tr></table></figure>

<h2 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h2><p>vim 15.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>( <span class="number">0.1</span> + <span class="number">0.1</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">0.2</span> + <span class="number">0.2</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">2</span> * <span class="number">0.1</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">2</span> * <span class="number">0.2</span> )</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-------------------&quot;</span>)       <span class="comment">#结果包含的小数可能是不确定的</span></span><br><span class="line"><span class="built_in">print</span>( <span class="number">0.2</span> + <span class="number">0.1</span> )</span><br><span class="line"><span class="built_in">print</span>( <span class="number">3</span> * <span class="number">0.1</span> )</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">0.2</span><br><span class="line">0.4</span><br><span class="line">0.2</span><br><span class="line">0.4</span><br><span class="line">-------------------</span><br><span class="line">0.30000000000000004</span><br><span class="line">0.30000000000000004</span><br></pre></td></tr></table></figure>

<h2 id="使用函数str-避免类型错误"><a href="#使用函数str-避免类型错误" class="headerlink" title="使用函数str()避免类型错误"></a>使用函数str()避免类型错误</h2><p>vim 16.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line">message = <span class="string">&quot;Happy &quot;</span> + age + <span class="string">&quot;rd Birthday!&quot;</span>   <span class="comment">#类型错误</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Traceback (most recent call last):</span><br><span class="line">  File &quot;16.py&quot;, line 2, in &lt;module&gt;</span><br><span class="line">    message = &quot;Happy &quot; + age + &quot;rd Birthday!&quot;</span><br><span class="line">TypeError: must be str, not int</span><br></pre></td></tr></table></figure>

<p>vim 17.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">age = <span class="number">23</span></span><br><span class="line">message = <span class="string">&quot;Happy &quot;</span> + <span class="built_in">str</span>(age) + <span class="string">&quot;rd Birthday!&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Happy 23rd Birthday!</span><br></pre></td></tr></table></figure>

<h2 id="Python-2-中的整数"><a href="#Python-2-中的整数" class="headerlink" title="Python 2 中的整数"></a>Python 2 中的整数</h2><p>与c语言类似，3&#x2F;2&#x3D;1而不是1.5</p>
<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><p>vim 18.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 向大家问好</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello Python people!&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Hello Python people!</span><br></pre></td></tr></table></figure>

<h1 id="Python-之禅"><a href="#Python-之禅" class="headerlink" title="Python 之禅"></a>Python 之禅</h1><p>vim 19.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> this</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">The Zen of Python, by Tim Peters</span><br><span class="line"></span><br><span class="line">Beautiful is better than ugly.</span><br><span class="line">Explicit is better than implicit.</span><br><span class="line">Simple is better than complex.</span><br><span class="line">Complex is better than complicated.</span><br><span class="line">Flat is better than nested.</span><br><span class="line">Sparse is better than dense.</span><br><span class="line">Readability counts.</span><br><span class="line">Special cases aren&#x27;t special enough to break the rules.</span><br><span class="line">Although practicality beats purity.</span><br><span class="line">Errors should never pass silently.</span><br><span class="line">Unless explicitly silenced.</span><br><span class="line">In the face of ambiguity, refuse the temptation to guess.</span><br><span class="line">There should be one-- and preferably only one --obvious way to do it.</span><br><span class="line">Although that way may not be obvious at first unless you&#x27;re Dutch.</span><br><span class="line">Now is better than never.</span><br><span class="line">Although never is often better than *right* now.</span><br><span class="line">If the implementation is hard to explain, it&#x27;s a bad idea.</span><br><span class="line">If the implementation is easy to explain, it may be a good idea.</span><br><span class="line">Namespaces are one honking great idea -- let&#x27;s do more of those!</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
        <category>python3</category>
      </categories>
  </entry>
  <entry>
    <title>列表简介</title>
    <url>/2021-06-23/list-introduction/</url>
    <content><![CDATA[<h1 id="列表是什么"><a href="#列表是什么" class="headerlink" title="列表是什么"></a>列表是什么</h1><p>类似于c的数组</p>
<p>vim 19.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;trek&#x27;, &#x27;cannondale&#x27;, &#x27;redline&#x27;, &#x27;specialized&#x27;]</span><br></pre></td></tr></table></figure>
<span id="more"></span>  

<h2 id="访问列表元素"><a href="#访问列表元素" class="headerlink" title="访问列表元素"></a>访问列表元素</h2><p>vim 21.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>].title())</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">trek</span><br><span class="line">Trek</span><br></pre></td></tr></table></figure>

<h2 id="索引从0而不是1开始"><a href="#索引从0而不是1开始" class="headerlink" title="索引从0而不是1开始"></a>索引从0而不是1开始</h2><p>vim 22.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">1</span>])      <span class="comment">#访问第二个元素</span></span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">3</span>])      <span class="comment">#访问第四个元素</span></span><br><span class="line"><span class="built_in">print</span>(bicycles[-<span class="number">1</span>])     <span class="comment">#访问最后一个元素</span></span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">cannondale</span><br><span class="line">specialized</span><br><span class="line">specialized</span><br></pre></td></tr></table></figure>

<h2 id="使用列表中的各个值"><a href="#使用列表中的各个值" class="headerlink" title="使用列表中的各个值"></a>使用列表中的各个值</h2><p>vim 23.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">bicycles = [<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line">message = <span class="string">&quot;My first bicycle was a &quot;</span> + bicycles[<span class="number">1</span>].title() + <span class="string">&quot;.&quot;</span></span><br><span class="line"><span class="built_in">print</span>(message)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">My first bicycle was a Cannondale.</span><br></pre></td></tr></table></figure>

<h1 id="修改、添加和删除元素"><a href="#修改、添加和删除元素" class="headerlink" title="修改、添加和删除元素"></a>修改、添加和删除元素</h1><p>大多数列表都是动态的，列表创建后，会随着程序的运行而增删元素。</p>
<h2 id="修改列表元素"><a href="#修改列表元素" class="headerlink" title="修改列表元素"></a>修改列表元素</h2><p>vim 24.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzukli&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">motorcycles[<span class="number">0</span>] = <span class="string">&#x27;ducati&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzukli&#x27;]</span><br><span class="line">[&#x27;ducati&#x27;, &#x27;yamaha&#x27;, &#x27;suzukli&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="在列表中添加元素"><a href="#在列表中添加元素" class="headerlink" title="在列表中添加元素"></a>在列表中添加元素</h2><h3 id="在列表末尾添加元素"><a href="#在列表末尾添加元素" class="headerlink" title="在列表末尾添加元素"></a>在列表末尾添加元素</h3><p>vim 25.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">motorcycles.append(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">mt = []</span><br><span class="line">mt.append(<span class="string">&#x27;honda&#x27;</span>)</span><br><span class="line">mt.append(<span class="string">&#x27;yamaha&#x27;</span>)</span><br><span class="line">mt.append(<span class="string">&#x27;suzuki&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(mt)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;, &#x27;ducati&#x27;]</span><br><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure>

<h3 id="在列表中插入元素"><a href="#在列表中插入元素" class="headerlink" title="在列表中插入元素"></a>在列表中插入元素</h3><p>vim 26.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">motorcycles.insert(<span class="number">0</span>,<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;ducati&#x27;, &#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="从列表中删除元素"><a href="#从列表中删除元素" class="headerlink" title="从列表中删除元素"></a>从列表中删除元素</h2><h3 id="使用del语句删除元素"><a href="#使用del语句删除元素" class="headerlink" title="使用del语句删除元素"></a>使用del语句删除元素</h3><p>vim 27.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="keyword">del</span> motorcycles[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-----------------------------&quot;</span>)</span><br><span class="line">mt = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(mt)</span><br><span class="line"><span class="keyword">del</span> mt[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(mt)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br><span class="line">-----------------------------</span><br><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]</span><br><span class="line">[&#x27;honda&#x27;, &#x27;suzuki&#x27;]</span><br></pre></td></tr></table></figure>

<h3 id="使用方法pop-删除元素"><a href="#使用方法pop-删除元素" class="headerlink" title="使用方法pop()删除元素"></a>使用方法pop()删除元素</h3><p>vim 28.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">popped_motorcycle = motorcycles.pop()</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(motorcycles.pop())</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(popped_motorcycle)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzuki&#x27;]       //原列表输出</span><br><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;]     //删除suzuki后原列表输出</span><br><span class="line">yamaha      //输出删除一项后原列表最后一项</span><br><span class="line">[&#x27;honda&#x27;]       //输出两次删除后的原列表</span><br><span class="line">suzuki      //输出被赋值列表</span><br></pre></td></tr></table></figure>

<h3 id="弹出列表中任何位置处元素"><a href="#弹出列表中任何位置处元素" class="headerlink" title="弹出列表中任何位置处元素"></a>弹出列表中任何位置处元素</h3><p>vim 29.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">first_owned = motorcycles.pop(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The last motorcycle I owned was a &quot;</span> + first_owned.title() + <span class="string">&quot;.&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">The last motorcycle I owned was a Honda.</span><br></pre></td></tr></table></figure>

<h3 id="根据值删除元素"><a href="#根据值删除元素" class="headerlink" title="根据值删除元素"></a>根据值删除元素</h3><p>vim 30.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles = [<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzukli&#x27;</span>,<span class="string">&#x27;ducati&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">motorcycles.remove(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line">dd = <span class="string">&#x27;yamaha&#x27;</span></span><br><span class="line">motorcycles.remove(dd)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nA &quot;</span> + dd.title() + <span class="string">&quot; is too expensive for me.&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzukli&#x27;, &#x27;ducati&#x27;]</span><br><span class="line">[&#x27;honda&#x27;, &#x27;yamaha&#x27;, &#x27;suzukli&#x27;]</span><br><span class="line">[&#x27;honda&#x27;, &#x27;suzukli&#x27;]</span><br><span class="line"></span><br><span class="line">A Yamaha is too expensive for me.</span><br></pre></td></tr></table></figure>

<h1 id="组织列表"><a href="#组织列表" class="headerlink" title="组织列表"></a>组织列表</h1><p>创建的列表中，元素的排序应用</p>
<h2 id="使用方法sort-对列表进行永久性排序"><a href="#使用方法sort-对列表进行永久性排序" class="headerlink" title="使用方法sort()对列表进行永久性排序"></a>使用方法sort()对列表进行永久性排序</h2><p>vim 31.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">cars.sort()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line">cars.sort(reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;audi&#x27;, &#x27;bmw&#x27;, &#x27;subaru&#x27;, &#x27;toyota&#x27;]</span><br><span class="line">[&#x27;toyota&#x27;, &#x27;subaru&#x27;, &#x27;bmw&#x27;, &#x27;audi&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="使用函数sorted-对列表进行临时排序"><a href="#使用函数sorted-对列表进行临时排序" class="headerlink" title="使用函数sorted()对列表进行临时排序"></a>使用函数sorted()对列表进行临时排序</h2><p>vim 32.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here is the original list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nHere is the sorted list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(cars))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nHere os the original list again:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Here is the original list:</span><br><span class="line">[&#x27;bmw&#x27;, &#x27;audi&#x27;, &#x27;toyota&#x27;, &#x27;subaru&#x27;]</span><br><span class="line"></span><br><span class="line">Here is the sorted list:</span><br><span class="line">[&#x27;audi&#x27;, &#x27;bmw&#x27;, &#x27;subaru&#x27;, &#x27;toyota&#x27;]</span><br><span class="line"></span><br><span class="line">Here os the original list again:</span><br><span class="line">[&#x27;bmw&#x27;, &#x27;audi&#x27;, &#x27;toyota&#x27;, &#x27;subaru&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="倒着打印列表"><a href="#倒着打印列表" class="headerlink" title="倒着打印列表"></a>倒着打印列表</h2><p>vim 33.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line">cars.reverse()      <span class="comment">#永久性的修改顺序</span></span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">[&#x27;bmw&#x27;, &#x27;audi&#x27;, &#x27;toyota&#x27;, &#x27;subaru&#x27;]</span><br><span class="line">[&#x27;subaru&#x27;, &#x27;toyota&#x27;, &#x27;audi&#x27;, &#x27;bmw&#x27;]</span><br></pre></td></tr></table></figure>

<h2 id="确定列表的长度"><a href="#确定列表的长度" class="headerlink" title="确定列表的长度"></a>确定列表的长度</h2><p>vim 34.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(cars))</span><br></pre></td></tr></table></figure>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure>

<h1 id="使用列表时避免索引错误"><a href="#使用列表时避免索引错误" class="headerlink" title="使用列表时避免索引错误"></a>使用列表时避免索引错误</h1><p>列表从0开始索引，-1为倒数第一个元素，列表为空-1报错</p>
]]></content>
      <categories>
        <category>python</category>
        <category>python3</category>
      </categories>
  </entry>
  <entry>
    <title>Docker的安装及使用</title>
    <url>/2022-08-02/docker_install_using/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>容器</category>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>CloudComputing</tag>
      </tags>
  </entry>
  <entry>
    <title>Podman的安装及使用</title>
    <url>/2022-08-02/podman_install_using/</url>
    <content><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><blockquote>
<p>主机1：腾讯云 新加坡 2核4G CentOS Stream8<br>主机2：本地 Intel N3540 4核8G CentOS 8.5</p>
</blockquote>
]]></content>
      <categories>
        <category>容器</category>
        <category>Podman</category>
      </categories>
      <tags>
        <tag>CloudComputing</tag>
      </tags>
  </entry>
</search>
